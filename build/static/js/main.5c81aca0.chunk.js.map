{"version":3,"sources":["components/Admin/AdvForm.Styled.js","redux/contacts/contactsAction.js","components/Admin/AdvForm.js","components/ContactsList/ContactsListItem/ContactsListItemStyled.js","components/ContactsList/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","components/Filter/FilterStyled.js","components/Filter/Filter.js","components/Section/SectionStyled.js","components/Section/Section.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js"],"names":["AdvFormStyled","styled","div","addContact","createAction","deleteContact","changeFilter","initialState","name","number","AdvForm","state","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","props","contacts","find","contact","toLowerCase","alert","id","uuidv4","this","onSubmit","className","type","pattern","title","required","onChange","Component","connect","ContactsListItemStyled","ContactsListItem","onDeleteContact","onClick","filter","includes","map","FilterStyled","SectionStyled","section","Section","children","toUpperCase","App","contactsItemReducer","createReducer","payload","filterReducer","_","contactsReducer","combineReducers","contactsPersistConfig","key","storage","whitelist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","store","configureStore","reducer","persistReducer","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c81aca0.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const AdvFormStyled = styled.div`\r\n  padding: 20px 10px;\r\n  margin: 10px;\r\n  border: 2px solid;\r\n  width: 400px;\r\n  .inputName {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: block;\r\n  }\r\n  .btnAdd {\r\n    display: block;\r\n    margin-top: 30px;\r\n    padding: 3px 5px;\r\n    border-radius: 6px;\r\n    cursor: pointer;\r\n    background-color: transparent;\r\n    &:hover {\r\n      background-color: teal;\r\n    }\r\n  }\r\n`;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/addContact');\r\nexport const deleteContact = createAction('contacts/deleteContact');\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n","import React, { Component } from 'react';\r\nimport { AdvFormStyled } from './AdvForm.Styled';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../redux/contacts/contactsAction';\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n};\r\nclass AdvForm extends Component {\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n  onHandleChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onHandleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const sameContactName = this.props.contacts.find(\r\n      contact => contact.name.toLowerCase() === this.state.name.toLowerCase(),\r\n    );\r\n    if (sameContactName) {\r\n      return alert(`${this.state.name} is already in contacts.`);\r\n    }\r\n\r\n    this.props.addContact({\r\n      ...this.state,\r\n      id: uuidv4(),\r\n    });\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <AdvFormStyled>\r\n        <form onSubmit={this.onHandleSubmit}>\r\n          <label>\r\n            Name\r\n            <input\r\n              className=\"inputName\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[A-ZA-ZА-ЯА-Я]+(([' -][A-ZA-ZА-ЯА-Я])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={name}\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <label>\r\n            Number\r\n            <input\r\n              className=\"inputName\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              value={number}\r\n              onChange={this.onHandleChange}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className=\"btnAdd\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </AdvFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addContact })(AdvForm);\r\n","import styled from 'styled-components';\r\n\r\nexport const ContactsListItemStyled = styled.div`\r\n  .btnDelete {\r\n    padding: 2px;\r\n    margin: 5px 10px;\r\n    border-radius: 6px;\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-color: tomato;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ContactsListItemStyled } from './ContactsListItemStyled';\r\n\r\nconst ContactsListItem = ({ name, number, id, onDeleteContact }) => {\r\n  const onDeleteItem = () => {\r\n    onDeleteContact(id);\r\n  };\r\n\r\n  return (\r\n    <ContactsListItemStyled>\r\n      <li>\r\n        {name}\r\n        <span>: </span>\r\n        {number}\r\n        <button className=\"btnDelete\" type=\"button\" onClick={onDeleteItem}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    </ContactsListItemStyled>\r\n  );\r\n};\r\n\r\nContactsListItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactsListItem;\r\n","import React from 'react';\r\nimport ContactsListItem from './ContactsListItem/ContactsListItem';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contactsAction';\r\n\r\nconst ContactsList = ({ contacts, filter, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts\r\n        .filter(contact =>\r\n          contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n        )\r\n        .map(contact => (\r\n          <ContactsListItem\r\n            key={contact.id}\r\n            {...contact}\r\n            onDeleteContact={onDeleteContact}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts,\r\n  filter: state.filter,\r\n});\r\n\r\nexport default connect(mapStateToProps, { onDeleteContact: deleteContact })(\r\n  ContactsList,\r\n);\r\n","import styled from 'styled-components';\r\n\r\nexport const FilterStyled = styled.div`\r\n  margin-left: 10px;\r\n  .inputFilter {\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    display: block;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { FilterStyled } from './FilterStyled';\r\nimport { connect } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contactsAction';\r\n\r\nconst Filter = ({ filter, changeFilter }) => {\r\n  const onChange = e => {\r\n    changeFilter(e.target.value);\r\n  };\r\n  return (\r\n    <FilterStyled>\r\n      <label className=\"labelFilter\">\r\n        Find contacts by name:\r\n        <input\r\n          className=\"inputFilter\"\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </FilterStyled>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  changeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: state.filter,\r\n});\r\n\r\nexport default connect(mapStateToProps, { changeFilter })(Filter);\r\n","import styled from 'styled-components';\r\n\r\nexport const SectionStyled = styled.section`\r\n  .sectionTitle {\r\n    color: teal;\r\n    margin: 20px;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { SectionStyled } from './SectionStyled';\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <SectionStyled>\r\n      <h2 className=\"sectionTitle\">{title.toUpperCase()}</h2>\r\n      {children}\r\n    </SectionStyled>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\n\r\nimport AdvForm from './Admin/AdvForm';\r\nimport ContactsList from './ContactsList/ContactsList';\r\nimport Filter from './Filter/Filter';\r\nimport Section from './Section/Section';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Section title=\"Phonebook\">\r\n        <AdvForm />\r\n      </Section>\r\n      <Section title=\"Contacts\">\r\n        <Filter />\r\n        <ContactsList />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport { addContact, changeFilter, deleteContact } from './contactsAction';\r\n\r\nconst contactsItemReducer = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\nconst filterReducer = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  contacts: contactsItemReducer,\r\n  filter: filterReducer,\r\n});\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contactsReducer';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  whitelist: ['contacts'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\nconst store = configureStore({\r\n  reducer: persistReducer(contactsPersistConfig, contactsReducer),\r\n  middleware,\r\n});\r\n\r\npersistStore(store);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}